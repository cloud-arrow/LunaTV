name: Build Electron App

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., v1.0.0)'
        required: false
        default: 'latest'

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10
          
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: Install dependencies
        run: pnpm install
        
      - name: Build better-sqlite3 (macOS/Linux)
        if: runner.os != 'Windows'
        run: |
          cd node_modules/.pnpm/better-sqlite3@12.4.1/node_modules/better-sqlite3
          npm run build-release
        shell: bash
        
      - name: Build better-sqlite3 (Windows)
        if: runner.os == 'Windows'
        run: |
          cd node_modules/.pnpm/better-sqlite3@12.4.1/node_modules/better-sqlite3
          npm run build-release
        shell: pwsh
        
      - name: Build Next.js
        run: pnpm build
        
      - name: Copy standalone files
        run: pnpm copy:standalone
        
      - name: Build Electron app
        run: pnpm exec electron-builder --publish never
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: List built files
        run: ls -R dist/
        shell: bash
        
      - name: Upload Windows artifacts
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: |
            dist/*.exe
            dist/*.exe.blockmap
            
      - name: Upload macOS artifacts
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: macos-installer
          path: |
            dist/*.dmg
            dist/*.dmg.blockmap
            
      - name: Upload Linux artifacts
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: linux-installer
          path: |
            dist/*.AppImage
            dist/*.snap
            
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.exe
            dist/*.dmg
            dist/*.AppImage
            dist/*.snap
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

